const vars = require('./tailwindcss-vars');

/** @type {import('tailwindcss').Config} */
module.exports = {
  future: {
    hoverOnlyWhenSupported: true,
  },
  content: ['./src/**/*.{js,jsx,ts,tsx}'],
  darkMode: ['class'],
  theme: {
    extend: {
      colors: {
        base: {
          lo: vars.$semantic.color.loContrast,
          hi: vars.$semantic.color.hiContrast,
          weak: vars.$semantic.color.weakContrast,
          1: vars.$scale.color.gray1,
          2: vars.$scale.color.gray2,
          3: vars.$scale.color.gray3,
          4: vars.$scale.color.gray4,
          5: vars.$scale.color.gray5,
          6: vars.$scale.color.gray6,
          7: vars.$scale.color.gray7,
          8: vars.$scale.color.gray8,
          9: vars.$scale.color.gray9,
          10: vars.$scale.color.gray10,
          11: vars.$scale.color.gray11,
          12: vars.$scale.color.gray12,
        },
        canvas: {
          base: vars.$semantic.color.canvas,
          subtle: vars.$semantic.color.canvasSubtle,
        },
        primary: {
          base: vars.$semantic.color.primary9,
          hi: vars.$semantic.color.primary11,
          1: vars.$semantic.color.primary1,
          2: vars.$semantic.color.primary2,
          3: vars.$semantic.color.primary3,
          4: vars.$semantic.color.primary4,
          5: vars.$semantic.color.primary5,
          6: vars.$semantic.color.primary6,
          7: vars.$semantic.color.primary7,
          8: vars.$semantic.color.primary8,
          9: vars.$semantic.color.primary9,
          10: vars.$semantic.color.primary10,
          11: vars.$semantic.color.primary11,
          12: vars.$semantic.color.primary12,
        },
        danger: {
          base: vars.$semantic.color.danger,
          hi: vars.$semantic.color.dangerForeground,
          1: vars.$scale.color.red1,
          2: vars.$scale.color.red2,
          3: vars.$scale.color.red3,
          4: vars.$scale.color.red4,
          5: vars.$scale.color.red5,
          6: vars.$scale.color.red6,
          7: vars.$scale.color.red7,
          8: vars.$scale.color.red8,
          9: vars.$scale.color.red9,
          10: vars.$scale.color.red10,
          11: vars.$scale.color.red11,
          12: vars.$scale.color.red12,
        },
        success: {
          base: vars.$semantic.color.success,
          hi: vars.$semantic.color.successForeground,
          1: vars.$scale.color.green1,
          2: vars.$scale.color.green2,
          3: vars.$scale.color.green3,
          4: vars.$scale.color.green4,
          5: vars.$scale.color.green5,
          6: vars.$scale.color.green6,
          7: vars.$scale.color.green7,
          8: vars.$scale.color.green8,
          9: vars.$scale.color.green9,
          10: vars.$scale.color.green10,
          11: vars.$scale.color.green11,
          12: vars.$scale.color.green12,
        },
        info: {
          base: vars.$semantic.color.info,
          hi: vars.$semantic.color.infoForeground,
          1: vars.$scale.color.blue1,
          2: vars.$scale.color.blue2,
          3: vars.$scale.color.blue3,
          4: vars.$scale.color.blue4,
          5: vars.$scale.color.blue5,
          6: vars.$scale.color.blue6,
          7: vars.$scale.color.blue7,
          8: vars.$scale.color.blue8,
          9: vars.$scale.color.blue9,
          10: vars.$scale.color.blue10,
          11: vars.$scale.color.blue11,
          12: vars.$scale.color.blue12,
        },
        warning: {
          base: vars.$semantic.color.warning,
          hi: vars.$semantic.color.warningForeground,
          1: vars.$scale.color.yellow1,
          2: vars.$scale.color.yellow2,
          3: vars.$scale.color.yellow3,
          4: vars.$scale.color.yellow4,
          5: vars.$scale.color.yellow5,
          6: vars.$scale.color.yellow6,
          7: vars.$scale.color.yellow7,
          8: vars.$scale.color.yellow8,
          9: vars.$scale.color.yellow9,
          10: vars.$scale.color.yellow10,
          11: vars.$scale.color.yellow11,
          12: vars.$scale.color.yellow12,
        },
      },
    },
  },
  plugins: [],
};
